name: Test Workflow
on:
  pull_request:
    types:
      - opened
    branches:
      - main
      - 'dev-*'
      - 'dev/**'
  workflow_dispatch: # Even we are not using any option here but still we have to use colon for every trigger
  push:
    branches:
      - main
      - 'dev-*' # dev-new dev-this-is-new
      - 'dev/**' # dev/new_feat/new_change
#    paths-ignore:
#      - '.github/workflows/*' # If i push the change in workflow folder, the GitHub workflow won't start.
#    paths:
#      - 'notebooks/**' # Workflow will start only, if we do changes in these paths


jobs:
  TEST:
    environment: Testing
    env:
      DATA_FILE_PATH: ${{ vars.DATA_FILE_PATH }}
      DATA_FILE_NAME: ${{ secrets.DATA_FILE_NAME }}

    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
#      - name: Install Java
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: temurin
#      - name: Install Spark
#        uses: vemonet/setup-spark@v1
#        with:
#          spark-version: '3.5.3'
#          hadoop-version: '3'

      - name: Load and cache dependencies
        id: cache_action
        uses: ./.github/actions/cache-dependencies
        with:
          caching: 'true'

      - name: Caching Output
        run: echo "Caching - ${{ steps.cache_action.outputs.caching }}"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest and generate xml report
        continue-on-error: true
        id: testing_data
        run: pytest tests/test_pipeline.py --junitxml=test_results.xml

      - name: Upload test results
#        if: failure() && steps.testing_data.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: test_results.xml

      - name: Publish test results in GitHub UI
#        if: failure() && steps.testing_data.outcome == 'failure'
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'test_results.xml'
          check_name: 'Pytest Results'

      - name: Testing Data File Path and Name
        run: |
          echo "Data File Path: $DATA_FILE_PATH"
          echo "Data File Name: $DATA_FILE_NAME"

  Testing:
    needs: TEST
    uses: ./.github/workflows/reusable.yml
    with:
      artifact-name: pytest-results
#    secrets:
#      secret-name: ${{ secrets.SOME_SECRET }}

  Testing_reusable_output:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Print Test Output
        run: echo "${{ needs.Testing.outputs.test_output }}"

  Dev:
    needs: TEST
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Load and cache dependencies
        uses: ./.github/actions/cache-dependencies

      - name: print Test File Name
        run: echo "print $DATA_FILE_NAME"

  Report:
    needs: [TEST, Dev]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"

      - name: Send Teams Notification
        run: |
          JOB_NAME=""
          if [[ "${{ needs.TEST.result }}" == "failure" ]]; then
            JOB_NAME="TEST"
          elif [[ "${{ needs.Dev.result }}" == "failure" ]]; then
            JOB_NAME="Dev"
          fi
          
          MESSAGE="‚ö†Ô∏è GitHub Actions Alert: **$JOB_NAME job failed** in [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n"
          MESSAGE+="üõ†Ô∏è **Reason**: Check the logs for details."
          
          curl -H "Content-Type: application/json" -d "{
            'text': '$MESSAGE'
          }" ${{ secrets.TEAMS_WEBHOOK_URL }}